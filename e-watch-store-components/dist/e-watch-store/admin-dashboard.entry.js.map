{"file":"admin-dashboard.entry.esm.js","mappings":"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","names":[],"sources":["src/components/admin-dashboard/admin-dashboard.css?tag=admin-dashboard&encapsulation=shadow","src/components/admin-dashboard/admin-dashboard.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n\n.container {\n  margin-top: 8%;\n}\n\n.body-section {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: top;\n  justify-content: center;\n  margin: 10px;\n}\n\n.products-list {\n  width: 100%;\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n}\n\nth,\ntd {\n  border: 1px solid #ddd;\n  padding: 8px;\n  text-align: center;\n}\n\nth {\n  background-color: black;\n  color: white;\n}\n\ntfoot td {\n  font-weight: bold;\n}\n\n.card {\n  border: 1px solid grey;\n  width: 300px;\n  padding: 20px;\n  margin: 20px;\n  border-radius: 10px;\n}\n\n.card h3 {\n  margin-bottom: 15px;\n  font-size: 18px;\n  color: #333;\n}\n\n.card dl {\n  margin: 0;\n}\n\n.card dt {\n  font-weight: bold;\n  margin-top: 10px;\n}\n\n.card dd {\n  margin: 0;\n  margin-bottom: 10px;\n}\n\n.card input[type=\"text\"],\n.card input[type=\"date\"],\n.card select {\n  width: calc(100% - 10px);\n  padding: 8px;\n  margin-top: 5px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  box-sizing: border-box;\n}\n\n.card button {\n  display: inline-block;\n  width: 100%;\n  padding: 10px 15px;\n  margin-top: 10px;\n  background-color: rgb(71, 71, 71);\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: bold;\n  transition: background-color 0.3s ease;\n}\n\n.card button:hover {\n  background-color: rgb(138, 166, 144);\n}\n\n\n#show-product-card-button {\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  background-color: rgb(0, 123, 255);\n  color: white;\n  border: none;\n  padding: 10px;\n  cursor: pointer;\n}\n\n#show-product-card-button i {\n  font-size: 24px;\n}\n\n#arrow {\n  font-size: 200%;\n}\n\n.edit-btn {\n  background-color: rgb(0, 123, 255);\n  color: white;\n  border: none;\n  padding: 5px;\n  cursor: pointer;\n  font-size: 16px;\n  width: 100%;\n}\n\n.delete-btn {\n  background-color: rgba(255, 84, 84, 0.8);\n  color: white;\n  border: none;\n  padding: 5px;\n  cursor: pointer;\n  font-size: 16px;\n  width: 100%;\n}","import { Component, h, State } from '@stencil/core';\nimport { products_endpoint } from '../../interfaces/endpoints';\nimport { IProduct } from '../../interfaces/IProduct';\n\n@Component({\n  tag: 'admin-dashboard',\n  styleUrl: 'admin-dashboard.css',\n  shadow: true,\n})\nexport class AdminDashboard {\n  @State() products: IProduct[] = [];\n  @State() newProduct: IProduct = { 'id': '', 'product-name': '', 'product-price': 0, 'product-url': '', 'product-count': 0 };\n  @State() editIndex: number | null = null;\n  @State() showCard: boolean = false; // State to control the visibility of the card\n\n  apiUrl: string = products_endpoint;\n\n  componentWillLoad() {\n    this.fetchProducts();\n  }\n\n  async fetchProducts() {\n    const response = await fetch(this.apiUrl);\n    const data = await response.json();\n    this.products = data;\n  }\n\n  getNextProductId() {\n    if (this.products.length === 0) return '1';\n\n    const maxId = Math.max(...this.products.map(p => parseInt(p['id'], 10)));\n    const nextId = maxId + 1;\n\n    return nextId.toString();\n  }\n\n  handleInputChange = (field: string, event: Event) => {\n    const target = event.target as HTMLInputElement;\n    const value = field === 'product-price' || field === 'product-count' ? parseFloat(target.value) : target.value;\n    this.newProduct = { ...this.newProduct, [field]: value };\n  };\n\n  async addProduct() {\n    this.newProduct['id'] = this.getNextProductId();\n    const response = await fetch(this.apiUrl, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(this.newProduct),\n    });\n    if (response.ok) {\n      this.fetchProducts();\n      this.resetForm();\n    }\n    this.toggleCard(false); // Hide card after adding\n  }\n\n  async updateProduct() {\n    const updatedProduct = { ...this.newProduct };\n    const productIdToUpdate = this.products[this.editIndex!]['id']; // Retrieve existing product-id\n\n    // Fetch current product to ensure it exists\n    const responseFetch = await fetch(`${this.apiUrl}/${productIdToUpdate}`);\n    if (!responseFetch.ok) {\n      console.log(\"Product not found\");\n      alert(\"Product not found\");\n      return;\n    }\n\n    // Send PUT request\n    const response = await fetch(`${this.apiUrl}/${productIdToUpdate}`, {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(updatedProduct),\n    });\n\n    if (response.ok) {\n      console.log(\"Product updated successfully!\");\n      this.fetchProducts();\n      this.resetForm();\n      this.editIndex = null;\n    } else {\n      console.log(\"Failed to update product\", response);\n      alert(\"Failed to update product\");\n    }\n\n    this.toggleCard(false); // Hide card after updating\n  }\n\n  async deleteProduct(index: number) {\n    const productId = this.products[index]['id'];\n    const response = await fetch(`${this.apiUrl}/${productId}`, {\n      method: 'DELETE',\n    });\n    if (response.ok) {\n      this.fetchProducts();\n    }\n  }\n\n  editProduct(index: number) {\n    this.editIndex = index;\n    this.newProduct = { ...this.products[index] };\n    this.toggleCard(true); // Show card when editing\n  }\n\n  toggleCard = (show: boolean) => {\n    this.showCard = show;\n  };\n\n  handleFormSubmit = () => {\n    if (this.editIndex === null) {\n      this.addProduct();\n    } else {\n      this.updateProduct();\n    }\n  }\n\n  resetForm() {\n    this.newProduct = { 'id': '', 'product-name': '', 'product-price': 0, 'product-url': '', 'product-count': 0 };\n  }\n\n  render() {\n    return (\n      <div class=\"container-fluid\">\n        <header-component></header-component>\n\n        <div class=\"container\">\n          <div class=\"body-section\">\n            <div class=\"products-list container-fluid\">\n              <table class=\"container-fluid\">\n                <thead>\n                  <tr>\n                    <th>Product Image</th>\n                    <th>Product Name</th>\n                    <th>Price</th>\n                    <th>Stock Count</th>\n                    <th>Edit</th>\n                    <th>Delete</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.products.map((product, index) => (\n                    <tr key={index}>\n                      <td>\n                        <img src={product['product-url']} alt={product['product-name']} width=\"50\" />\n                      </td>\n                      <td>{product['product-name']}</td>\n                      <td> ₹{Number(product['product-price']).toFixed(2)}</td>\n                      <td>{product['product-count']}</td>\n                      <td>\n                        <button class=\"edit-btn\" onClick={() => this.editProduct(index)}>Edit</button>\n                      </td>\n                      <td>\n                        <button class=\"delete-btn\" onClick={() => this.deleteProduct(index)}>Delete</button>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <hr />\n            </div>\n            {this.showCard ? (\n              <div class=\"card\" id=\"expense-card\">\n                <h3 id=\"expense-card-title\">{this.editIndex === null ? 'Add Product' : 'Edit Product'}</h3>\n                <dl>\n                  <dt>Product Name</dt>\n                  <dd><input type=\"text\" value={this.newProduct['product-name']} onInput={this.handleInputChange.bind(this, 'product-name')} /></dd>\n                  <dt>Product Price</dt>\n                  <dd><input type=\"text\" value={this.newProduct['product-price']} onInput={this.handleInputChange.bind(this, 'product-price')} /></dd>\n                  <dt>Product URL</dt>\n                  <dd><input type=\"text\" value={this.newProduct['product-url']} onInput={this.handleInputChange.bind(this, 'product-url')} /></dd>\n                  <dt>Product Count</dt>\n                  <dd><input type=\"text\" value={this.newProduct['product-count']} onInput={this.handleInputChange.bind(this, 'product-count')} /></dd>\n                </dl>\n                <button onClick={this.handleFormSubmit}>{this.editIndex === null ? 'Add' : 'Update'}</button>\n              </div>\n            ) : ''}\n            <button id=\"show-product-card-button\" onClick={this.toggleCard.bind(this, !this.showCard)}>\n              <span id=\"arrow\">{this.showCard ? '-' : '+'}</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"],"version":3}