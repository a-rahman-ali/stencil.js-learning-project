{"file":"cart-component.entry.esm.js","mappings":"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","names":[],"sources":["src/components/cart-component/cart-component.css?tag=cart-component&encapsulation=shadow","src/components/cart-component/cart-component.tsx"],"sourcesContent":[":host {\n  display: block;\n  background-image: url(\"https://png.pngtree.com/thumb_back/fw800/background/20240204/pngtree-smart-watches-floating-in-ramadan-themed-background-image_15596011.png\");\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n  min-height: 100vh;\n}\n\n.content {\n  margin-top: 10%;\n}\n\n.cart-item {\n  display: flex;\n  align-items: center;\n  padding: 12px;\n  border: 1px solid #ccc;\n  margin-bottom: 12px;\n}\n\n.cart-item img {\n  width: 50px;\n  height: 50px;\n  margin-right: 12px;\n}\n\n.cart-item .details {\n  flex: 1;\n  display: flex;\n  justify-content: space-around;\n}\n\n.cart-item .price {\n  font-weight: bold;\n}\n\n.cart-item .remove-btn {\n  cursor: pointer;\n  padding: 6px 12px;\n  background-color: #f44336;\n  color: white;\n  border: none;\n  border-radius: 4px;\n}\n\n.cart-item .remove-btn:hover {\n  background-color: #cc0000;\n}\n\n.checkout-btn {\n  margin-top: 20px;\n  padding: 10px 20px;\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 16px;\n}\n\n.checkout-btn:hover {\n  background-color: #45a049;\n}\n\n.no-items {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  color: white;\n  text-align: center;\n  padding: 50px 50px;\n  font-size: 80px;\n  font-weight: 500;\n}","import { Component, Host, h, State, Event, EventEmitter } from '@stencil/core';\nimport { products_endpoint, users_endpoint } from '../../interfaces/endpoints';\nimport { IProduct } from '../../interfaces/IProduct';\n\n@Component({\n  tag: 'cart-component',\n  styleUrl: 'cart-component.css',\n  shadow: true,\n})\nexport class CartComponent {\n  @State() cartItems: IProduct[] = [];\n  @State() isLoading: boolean = true;\n  @Event({ eventName: 'cartItemCountUpdated', bubbles: true, composed: true }) cartItemCountUpdated: EventEmitter<number>;\n\n\n  componentWillLoad() {\n    if (this.isUserLoggedIn()) {\n      this.loadUserCart();\n    } else {\n      this.loadLocalStorageCart();\n    }\n\n    setTimeout(() => {\n      this.isLoading = false;\n    }, 1500);\n  }\n\n  isUserLoggedIn(): boolean {\n    const userEmail = localStorage.getItem('useremail');\n    return !!userEmail;\n  }\n\n  removeFromCart(itemId: string) {\n    const itemIndex = this.cartItems.findIndex(item => item.id === itemId);\n    if (itemIndex !== -1) {\n      // Decrease product count or remove completely from cartItems\n      if (this.cartItems[itemIndex]['product-count'] > 1) {\n        this.cartItems[itemIndex]['product-count']--;\n      } else {\n        this.cartItems.splice(itemIndex, 1);\n      }\n      this.cartItems = [...this.cartItems]; // Trigger re-render\n\n      // Update localStorage temporarily (if user is not logged in)\n      if (!this.isUserLoggedIn()) {\n        localStorage.setItem('tempCart', JSON.stringify(this.cartItems.map(item => item.id)));\n        this.updateCartItemCount();\n      }\n\n      // Update user's cart in backend (if user is logged in)\n      if (this.isUserLoggedIn()) {\n        const userEmail = localStorage.getItem('useremail');\n        if (!userEmail) {\n          console.error('User email not found.');\n          return;\n        }\n\n        fetch(`${users_endpoint}?email=${userEmail}`)\n          .then(response => {\n            if (!response.ok) {\n              throw new Error(`HTTP error! Status: ${response.status}`);\n            }\n            return response.json();\n          })\n          .then(users => {\n            if (!users || users.length === 0 || !users[0].id) {\n              throw new Error('Invalid user data received.');\n            }\n\n            const userId = users[0].id;\n            // Update user object with updated cart data\n            users[0].cart = this.cartItems.map(item => item.id);\n\n            // Make PUT request to update user's cart\n            fetch(`${users_endpoint}/${userId}`, {\n              method: 'PUT',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify(users[0]),\n            })\n              .then(() => {\n                this.updateCartItemCount();\n              })\n              .catch(error => console.error('Error updating user cart:', error));\n          })\n          .catch(error => console.error('Error fetching user data:', error));\n      }\n    }\n  }\n\n  updateCartItemCount() {\n    const cartItemCount = this.cartItems.reduce((total, item) => total + item['product-count'], 0);\n    this.cartItemCountUpdated.emit(cartItemCount);\n  }\n\n  loadUserCart() {\n    const userEmail = localStorage.getItem('useremail');\n    if (!userEmail) {\n      console.error('User email not found.');\n      return;\n    }\n\n    fetch(`${users_endpoint}?email=${userEmail}`)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(users => {\n        if (!users || users.length === 0 || !users[0].cart) {\n          throw new Error('Invalid user data received.');\n        }\n\n        const user = users[0]; // Assuming you're expecting a single user object\n        const cartItems: IProduct[] = [];\n        user.cart.forEach(itemId => {\n          const existingItem = cartItems.find(item => item.id === itemId);\n          if (existingItem) {\n            existingItem['product-count']++;\n          } else {\n            cartItems.push({\n              id: itemId,\n              'product-name': '',\n              'product-price': 0,\n              'product-url': '',\n              'product-count': 1,\n            });\n          }\n        });\n        this.cartItems = cartItems;\n        this.loadProductDetails();\n      })\n      .catch(error => console.error('Error loading user cart:', error));\n  }\n\n  loadLocalStorageCart() {\n    const tempCart = JSON.parse(localStorage.getItem('tempCart') || '[]');\n    // Initialize cart items with counts\n    const cartItems: IProduct[] = [];\n    tempCart.forEach(itemId => {\n      const existingItem = cartItems.find(item => item.id === itemId);\n      if (existingItem) {\n        existingItem['product-count']++;\n      } else {\n        cartItems.push({\n          id: itemId,\n          'product-name': '',\n          'product-price': 0,\n          'product-url': '',\n          'product-count': 1,\n        });\n      }\n    });\n    this.cartItems = cartItems;\n    this.loadProductDetails();\n  }\n\n  loadProductDetails() {\n    Promise.all(\n      this.cartItems.map(item =>\n        fetch(`${products_endpoint}/${item.id}`)\n          .then(response => response.json())\n          .then(product => ({\n            id: item.id,\n            'product-name': product['product-name'],\n            'product-price': product['product-price'],\n            'product-url': product['product-url'],\n            'product-count': item['product-count'], // Preserve count\n          }))\n      )\n    )\n      .then(productDetails => {\n        this.cartItems = productDetails;\n      })\n      .catch(error => console.error('Error fetching product details:', error));\n  }\n\n  calculateCartTotal(): number {\n    return this.cartItems.reduce((total, item) => total + (item['product-price'] * item['product-count']), 0);\n  }\n\n  handleCheckout() {\n    window.location.href = '/checkout';\n  }\n\n  render() {\n    return (\n      <Host>\n        <header-component></header-component>\n        <main class=\"content\">\n          {this.isLoading ? (\n            <loading-spinner></loading-spinner>\n          ) : (\n            this.cartItems.length > 0 ? (\n              <div class=\"cart-items\">\n                {this.cartItems.map(item => (\n                  <div class=\"cart-item\" key={item.id}>\n                    <img src={item['product-url']} alt={item['product-name']} />\n                    <div class=\"details\">\n                      <div>{item['product-name']}</div>\n                      <div class=\"price\">₹{item['product-price'].toFixed(2)}</div>\n                      <div class=\"count\">Quantity: {item['product-count']}</div>\n                    </div>\n                    <button class=\"remove-btn\" onClick={() => this.removeFromCart(item.id)}>\n                      Remove\n                    </button>\n                  </div>\n                ))}\n                <div class=\"cart-total\">\n                  <strong>Cart Total: ₹ {this.calculateCartTotal().toFixed(2)}</strong>\n                </div>\n                <button class=\"checkout-btn\" onClick={this.handleCheckout}>\n                  Checkout\n                </button>\n              </div>\n            ) : (\n              <div class=\"no-items\">\n                <p>No items in cart</p>\n              </div>\n            )\n          )}\n        </main>\n      </Host>\n    );\n  }\n\n}\n"],"version":3}